{
	"info": {
		"_postman_id": "791d2d19-c5d9-45c2-98eb-33a78969a265",
		"name": "REST API Course",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1 REST API simplified",
			"item": [
				{
					"name": "/store",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Another store\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Another item\",\n\t\"price\": 10.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/store/My Wonderful store/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My Wonderful store",
								"item"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store/My Wonderful store",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My Wonderful store"
							]
						}
					},
					"response": []
				},
				{
					"name": "/store/<name>/item",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/store/My Wonderful store/item",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"store",
								"My Wonderful store",
								"item"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "2 REST API with RESTful Flask",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"items"
							]
						},
						"description": "This should return list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specyfic item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 15.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 20.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update an existing item. "
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 15.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"bob\",\n\t\"password\": \"asdf\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "3 REST API with SQL",
			"item": [
				{
					"name": "/items",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODc3MzA0MzgsImlhdCI6MTU4NzczMDEzOCwibmJmIjoxNTg3NzMwMTM4LCJpZGVudGl0eSI6MX0.6uRweoZmOP97FnX-lipj0NUAyGHH10DfiW42_Fex9-4",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:5000/items",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"items"
							]
						},
						"description": "This should return list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODc1NTk2MzQsImlhdCI6MTU4NzU1OTMzNCwibmJmIjoxNTg3NTU5MzM0LCJpZGVudGl0eSI6MX0.KdhzALnG6luiPacHfzmfQQYDlVMYAo9WEbc4XblU6hs",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specyfic item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 15.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 20.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update an existing item. "
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 15.99\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/item/<name>",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"asdf\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/auth",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"asdf\"\n}"
						},
						"url": {
							"raw": "http://127.0.0.1:5000/register",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "5000",
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "4 REST API with SQLAlchemy",
			"item": [
				{
					"name": "/items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "224bb0d2-db6a-4f3b-9644-8d9ea3640565",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "224bb0d2-db6a-4f3b-9644-8d9ea3640565",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specyfic item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will return one specyfic item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bb9a7bf-8eac-421b-8eda-d70f5481c3a8",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 15.99,\n\t\"store_id\": 2\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bb9a7bf-8eac-421b-8eda-d70f5481c3a8",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"<name>\",\n\t\"price\": 20.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update an existing item. "
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da545ed0-b39e-4ab3-abde-7f566e22f4da",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Access token was not empty.\"] = jsonData.access_token !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"asdf\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"asdf\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "5 REST API on Herolu",
			"item": [
				{
					"name": "/items",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "224bb0d2-db6a-4f3b-9644-8d9ea3640565",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "This should return list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/stores",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "224bb0d2-db6a-4f3b-9644-8d9ea3640565",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "JWT {{jwt_token}}"
							}
						],
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "This should return list of items, each in JSON format."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will return one specyfic item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will return one specyfic item, uniquely identified by its name. No two items may have the same name."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bb9a7bf-8eac-421b-8eda-d70f5481c3a8",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"price\": 15.99,\n\t\"store_id\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7bb9a7bf-8eac-421b-8eda-d70f5481c3a8",
								"exec": [
									"tests[\"Response time is less than 200ms\"] = responseTime < 200;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will create a new item. If the item already exists, it will fail."
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"<name>\",\n\t\"price\": 20.99\n}"
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will create a new item or update an existing item. "
					},
					"response": []
				},
				{
					"name": "/item/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/item/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by name."
					},
					"response": []
				},
				{
					"name": "/store/<name>",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "JWT {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/<name>",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"<name>"
							]
						},
						"description": "This will delete an item, uniquely identified by name."
					},
					"response": []
				},
				{
					"name": "/auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da545ed0-b39e-4ab3-abde-7f566e22f4da",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Access token was not empty.\"] = jsonData.access_token !== undefined;",
									"",
									"postman.setEnvironmentVariable(\"jwt_token\", jsonData.access_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"asdf\"\n}"
						},
						"url": {
							"raw": "{{url}}/auth",
							"host": [
								"{{url}}"
							],
							"path": [
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "/register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"asdf\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}